package Semestr1.tastRGR.RGR;
import java.util.Scanner;
public class RgrTR12Derk {
    public static void main(String[] args) {
        float[][] Matr1 = {{3.81f, 0.25f, 1.28f, 1.25f, 4.21f},
                {2.25f, 1.32f, 5.08f, 0.49f, 6.97f},
                {5.31f, 6.78f, 0.98f, 1.04f, 2.88f},
                {9.89f, 2.45f, 3.35f, 2.28f, 10.98f}};
        //Початкова матриця
        System.out.print("----------Task1----------");
        System.out.print("\nСтартова матриця:");   //
        task13(Matr1);                        //Виводть початкову матрицю в консоль
        System.out.print("\n\nТрикутникова матриця:"); //
        task11(Matr1);                            //Виводить трикутну матрицю в консоль
        task13(Matr1);                            //
        System.out.println("\n\nВектор результатів: ");
        float[] b =task12(Matr1);
        for (float ar: b) System.out.println(ar);//Виводить результати в консоль
        System.out.print("----------Task2----------\n");
        Scanner sc = new Scanner(System.in);                    //
        System.out.println("Введіть перше натуральне число: " );  //
        int a = sc.nextInt();                             //Вводим вручну 3 натуральні
        System.out.println("Введіть друге натуральне число: " );  //числа з яких в консоль буде
        int a1 = sc.nextInt();                            //виводитись 1-ша цифра
        System.out.println("Введіть третє натуральне число: " );  //
        int a2 = sc.nextInt();                            //
        double t[] = task2(a, a1, a2);                          //
        for(int i=0; i<t.length; i++){                          //
            int q=1;                                            //виводить в консоль
            q+=i;                                                //результати 2 завдання
            System.out.println("Перша цифра "+q+"-го натурального числа:"); //
            System.out.printf("%.0f\n", t[i]);                              //
        }
    }
    public static float[][] task11(float[][] Matr1){
        float m;
        for (int k = 1; k < Matr1.length; k++) {
            //цикл в якому зміна k змінюється від 1 до кількості елементів в ряду матриці "Matr1"
            for (int j = k; j < Matr1.length; j++) {
                //цикл в якому зміна j змінюється від 1 до кількості елементів в ряду матриці "Matr1"
                m = Matr1[j][k - 1] / Matr1[k - 1][k - 1];
                //зміна "m" рівняється елементу під індексом[j][k - 1] початкової матриці який діляться
                //на елемент [k - 1][k - 1] цієїж матриці
                for (int i = 0; i < Matr1.length + 1; i++) {
                    //цикл в якому зміна і змінюється від 0 до кількості елементів в ряду матриці "Matr1"
                    Matr1[j][i] = Matr1[j][i] - m * Matr1[k - 1][i];
                    //елементами масиву Matr1 стануть числа які рівняються: від елемента початкового масиву з індексом [j][i]
                    //віднімаємо змінну m яка множиться на початковий масив з індексом [k - 1][i]
                }
            }
        }
        return Matr1;
        //повертаємо масив Matr1
    }

    public static float[] task12(float[][] Matr1){
        float[] x;                     //
        x = new float[Matr1.length];  //Вводимо однорідний масив "х" з розміром кількості елементів в ряду матриці "Matr1"
        for (int i = Matr1.length - 1; i >= 0; i -= 1){
            //цикл в якому зміна "і" змінюється від кількості елементів ряду масива Matr1 від якого відняли 1 до 0
            x[i] = Matr1[i][Matr1.length] / Matr1[i][i];
            // елементами масиву х буде елемент масиву Matr1 з індексом [i][Matr1.length] який ділиться на
            //елемент масиву Matr1 з індексом [i][i]
            for (int c =Matr1.length - 1; c > i; c -= 1){
                //цикл в якому зміна "с" змінюється від кількості елементів ряду масива Matr1 від якого відняли 1 до "і"
                x[i] = x[i] - Matr1[i][c] * x[c] / Matr1[i][i];
                //елементи масиву "х" будуть рівні: від елементу масива "х" які вираховуються в 62 ряду віднімаєм добуток
                // елемента матриці Matr1 з індексами [i][c] на масив "х" з індексом "с" який ділиться на елемент масиву
                //Matr1 з індексом [i][i]
            }
        }
        return x;
        //повертаєм масив"х"
    }

    public static void task13(float[][] x){
        //створюємо новий двомірний масив "х"
        for (int i = 0; i < x.length; i++){
            //цикл в якому змінюється зміна "і" від 0 до кількості елементів в ряду масива "х"
            System.out.println();
            for (int j = 0; j < x[i].length; j++){
                //цикл в якому змінюється зміна "j" від 0 до кількості елементів в ряду масива "х"
                if (x[i][j] % 1 == 0){                   //умова яка твердить: якщо елемент масиву "х" з індексом [i][j]
                    System.out.printf("%.0f", x[i][j]  );//рівняється цілому числу то в консоль воно буде виводитись
                    System.out.print("  ");              //цілим числом без ком
                }
                else{                                      //
                    System.out.printf("%.3f", x[i][j]   ); //в іншому випадку елемент масиву "х" з індексом [i][j]
                    System.out.print("  ");                //буде виводитись з трьома числами після коми
                }
            }
        }
    }
    public static void task13(float[] x){
        //Вводимо однорідний масив "х"
        for (int i = 0; i < x.length; i++){
            //цикл в якому змінюється зміна "і" від 0 до кількості елементів в ряду масива "х"
            int j = i+1;                    //в консоль буде виводитись в стовпчик "х1=" "х2=" "х3=" "х4=" "х5="
            System.out.print("x"+j+" = ");  //використовую для того щоб вивести в консоль результати 1 задачі
            float result =  Math.round(x[i]*1000)/1000f;
            if (result % 1 == 0){                    //умова яка твердить: якщо елемент масиву "х" з індексом [i]
                System.out.printf("%.0f\n", result); //рівняється цілому числу то в консоль воно буде виводитись
                System.out.print("  ");            // цілим числом без ком
            }
            else{                                   //
                System.out.printf("%.3f\n", result);  //в іншому випадку елемент масиву "х" з індексом [i]
                System.out.print("  ");             //буде виводитись з трьома числами після коми
            }
        }
    }
    public static double[] task2(int a, int a1, int a2){
        //визиваємо змінні "а" "а1" "а2" з методу меін
        int  n = 0;
        int b = a;
        //Вводимо змінні b і n типу int
        while(b>0){  //
            b /= 10; //Цикл за допомогою якого зміна b буде ділитись на десять n разів
            n++;     //так щоб чило в результаті було більше за 0
        }            //
        double  num = a/(int)Math.pow(10,n-1);
        // Водим нову зміну "num" яка буде рівна зміній "а" яку поділили на 10 в степені n-1
        int n1 = 0;
        int b1 = a1;
        //Вводимо змінні b1 і n1 типу int
        while(b1>0){  //
            b1 /= 10; //Цикл за допомогою якого зміна b1 буде ділитись на десять n1 разів
            n1++;     //так щоб чило в результаті було більше за 0
        }             //
        double  num1 = a1/(int)Math.pow(10,n1-1);
        //Водим нову зміну "num1" яка буде рівна зміній "а1" яку поділили на 10 в степені n1-1
        int n2 = 0;
        int b2 = a2;
        //Вводимо змінні b2 і n2 типу int
        while(b2>0){  //
            b2 /= 10; //Цикл за допомогою якого зміна b2 буде ділитись на десять n2 разів
            n2++;     //так щоб чило в результаті було більше за 0
        }             //
        double  num2 = a2/(int)Math.pow(10,n2-1);
        //Водим нову зміну "num2" яка буде рівна зміній "а2" яку поділили на 10 в степені n2-1
        double[] t={num, num1, num2};
        //зробив масив t я якого елементи num, num1, num2 для того що вернути ці три значення в метод меін
        return t;
        //Вернув масив t
    }
}
